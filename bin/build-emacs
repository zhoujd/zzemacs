#!/bin/bash

### Build guide
## https://github.com/emacs-mirror/emacs/releases/tag/emacs-27.2
## git clone https://git.savannah.gnu.org/git/emacs.git
## wget https://ftp.gnu.org/gnu/emacs/emacs-26.3.tar.xz
## patch -p1 < ~/zzemacs/misc/patch/<build-emacs-patch>.patch
## build-emacs <version> <prefix>

## Check run OS
if [ "$OS" = "Windows_NT" ] ; then
    echo "This script is not support on windows."
    exit 0
fi

## Get script path
SCRIPT_ROOT=$(cd $(dirname $0) && pwd)

EMACS_VER=${1:-27.2}
EMACS_SRC=emacs-${EMACS_VER}
EMACS_FILE=${EMACS_SRC}.tar.xz
EMACS_PREFIX=/usr/local/${EMACS_SRC}
EMACS_OPT="--with-modules"

## Import vars and functions
source $SCRIPT_ROOT/sample.sh

echo "Build emacs begin ..."

fetch_source() {
    if [ ! -d $EMACS_SRC ]; then
        if [ ! -f $EMACS_FILE ]; then
            wget https://ftp.gnu.org/gnu/emacs/$EMACS_FILE
        fi
        tar xf $EMACS_FILE
    else
        echo "$EMACS_SRC is aleady exist"
    fi

    echo "Fetch source finished"
}

build_source() {
    pushd $EMACS_SRC
    build_started=`date`
    echo "Starting build: $build_started"
    ./configure --prefix=${EMACS_PREFIX} ${EMACS_OPT}
    make -j4
    sudo make install
    echo "Install emacs binary to /usr/bin/"
    sudo ln -sfvT /usr/local/${EMACS_SRC}/bin/emacs-${EMACS_VER} /usr/bin/emacs${EMACS_VER}
    sudo ln -sfvT /usr/bin/emacs${EMACS_VER} /usr/bin/emacs
    build_finished=`date`
    echo
    echo "Build finished: $build_finished"
    popd
}

install_package() {
    ## dectect OS version
    case "$OS_DISTRO" in
        "SUSE" )
            sudo zypper install libjpeg-devel libpng-devel giflib-devel libtiff-devel
            ;;
        "Ubuntu" | "LinuxMint" | "Debian")
            sudo apt install -y automake
            sudo apt install -y build-essential
            sudo apt install -y libxft-dev libotf-dev libgpm-dev imagemagick
            sudo apt install -y libxpm-dev libpng-dev libjpeg-dev libtiff-dev libgif-dev
            sudo apt install -y libxaw7-dev libncurses5-dev libgtk2.0-dev librsvg2-dev libgconf2-dev
            sudo apt install -y libm17n-dev libgnutls28-dev libselinux1-dev libdbus-1-dev
            ;;
        "CentOS" )
            sudo yum -y groupinstall "Development Tools"
            sudo yum install -y gtk+-devel gtk2-devel
            sudo yum install -y libXpm-devel
            sudo yum install -y libpng-devel
            sudo yum install -y giflib-devel
            sudo yum install -y libtiff-devel libjpeg-devel
            sudo yum install -y ncurses-devel
            sudo yum install -y gpm-devel dbus-devel dbus-glib-devel dbus-python
            sudo yum install -y GConf2-devel pkgconfig
            sudo yum install -y libXft-devel
            sudo yum install -y git-core
            sudo yum install -y gitk git-gui
            sudo yum install -y wget
            ;;
        "Fedora" )
            sudo dnf -y groupinstall "Development Tools"
            sudo dnf install -y gtk+-devel gtk2-devel
            sudo dnf install -y libXpm-devel
            sudo dnf install -y libpng-devel
            sudo dnf install -y giflib-devel
            sudo dnf install -y libtiff-devel libjpeg-devel
            sudo dnf install -y ncurses-devel
            sudo dnf install -y gpm-devel dbus-devel dbus-glib-devel dbus-python
            sudo dnf install -y GConf2-devel pkgconfig
            sudo dnf install -y libXft-devel
            sudo dnf install -y git-core
            sudo dnf install -y gitk git-gui
            ;;
        "Arch" | "Manjaro" )
            sudo pacman -S libjpeg libtiff giflib imagemagick
            ;;
        * )
            echo "You are about to install on a non supported linux distribution."
            ;;
    esac
}

echo -n "Do you need install packages? (y/N): "
read answer
case "$answer" in
    "Y" | "y" )
        run_cmd install_package
        ;;
esac

run_cmd fetch_source
run_cmd build_source

echo "Build emacs end ..."
