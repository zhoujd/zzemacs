#!/bin/bash

## https://github.com/whiteinge/dotfiles/blob/master/bin/diffconflicts
# A better vimdiff mergetool for Git
# NOTE: Use :cq to abort the merge and exit Vim with an error code.

if [[ -z $@ || $# != "5" ]] ; then
    echo -e "Usage: `basename $0` \$BASE \$LOCAL \$REMOTE \$MERGED"
    exit 1
fi

# vim as mergetool
cmd=vim

BASE="$1"
LOCAL="$2"
REMOTE="$3"
MERGED="$4"
printf -v QBASE '%q' "${BASE}"
printf -v QLOCAL '%q' "${LOCAL}"
printf -v QREMOTE '%q' "${REMOTE}"
printf -v QMERGED '%q' "${MERGED}"

# Use gnu sed if on OSX for better portability (brew install gnu-sed)
GNU_SED="gsed"
type $GNU_SED >/dev/null 2>&1 || GNU_SED="sed"

# Temporary files for left and right side, keeping file extensions for syntax highlighting
MERGED_PATH="$(dirname ${MERGED})"
MERGED_FILE="$(basename ${MERGED})"
LCONFL="${MERGED_PATH}/.REMOTE.$$.${MERGED_FILE}"
RCONFL="${MERGED_PATH}/.LOCAL.$$.${MERGED_FILE}"

# Always delete our temp files; Git will handle it's own temp files
trap 'rm -f "'"${LCONFL}"'" "'"${RCONFL}"'"' SIGINT SIGTERM EXIT

# Remove the conflict markers for each 'side' and put each into a temp file
$GNU_SED -r -e '/^<<<<<<< /,/^=======\r?$/d' -e '/^>>>>>>> /d' "${MERGED}" > "${LCONFL}"
$GNU_SED -r -e '/^=======\r?$/,/^>>>>>>> /d' -e '/^<<<<<<< /d' "${MERGED}" > "${RCONFL}"

# Fire up vimdiff
$cmd -f -R -d "${LCONFL}" "${RCONFL}" \
    -c ":set noro" \
    -c ":tabe $QLOCAL" -c ":vert diffs $QBASE" -c ":vert diffs $QREMOTE" \
    -c ":winc t" -c ":tabe $QMERGED" -c ":tabfir"

EC=$?

# Overwrite $MERGED only if vimdiff exits cleanly.
if [[ $EC == "0" ]] ; then
    cat "${LCONFL}" > "${MERGED}"
fi

exit $EC
